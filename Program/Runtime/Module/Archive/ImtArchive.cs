// zlib/libpng License
//
// Copyright (c) 2018 Sinoa
//
// This software is provided 'as-is', without any express or implied warranty.
// In no event will the authors be held liable for any damages arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it freely,
// subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not claim that you wrote the original software.
//    If you use this software in a product, an acknowledgment in the product documentation would be appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

#region IceMilkTeaArchive Specification Document
/**********************************************************************
--------------------------------
IceMilkTeaArchive 仕様書 ver 0.1
--------------------------------

目次（Index）
 0. べき、なければならない、もよい、ます（ません）、について
 1. 背景＆目的（Introduction）
 2. アーカイブファイルフォーマット（ArchiveFile Format）
 3. エントリ情報フォーマット（EntryInfo Format）



0. べき、ならない、もよい、ます（ません）、について
------------------------------------------------------------
　この仕様書では、各文に含まれる語句に
「～べき」「～べきである」「～ならない」「～もよい」「～ます」
といった、単語を使い分けています。
仕様書をよく読んで、独自で実装する場合は、単語の使い分けに注意してください。

各単語の表現は次のように定義しています。
- ～べき、～べきである、～ならない、～なりません
 - 内容の事柄について、厳守しなければなりません、内容と異なる動作をした場合は
   仕様に対する動作違反として、見做されます。

- ～もよい、～です、～ます
 - 内容の事柄について、仕様として定義しておりますが、該当の挙動や動作を表現するのではなく
   実装の方針を決定しやすくするために、記述していることがしばしばあります。
   場合によっては、動作を実装しなくても良い場合もありますし、動作を強要することもありません。
   しかし、実際として厳守する内容ではなくとも、逸脱した実装は許容しません。
   つまり、実際の挙動によって、この仕様書で厳守すべき定義された内容の一部でも異なってしまう場合は
   許される事ではありません。

　また、ここに列挙した単語以外にも上記に近い単語で表現する箇所がありますが
極力、仕様に対して正確な実装をするのが、良いです。



1. 背景＆目的（Introduction）
------------------------------------------------------------
　近年、コンピュータのストレージのハードウェア構成がかなり成長し
非常に小型でありながら、大容量、高通信レート、高耐久性、を実現されており
大抵の場合、ファイルの操作に対するユーザーストレスは格段に下がっています。

　しかしながら、現在においてハードウェアが進化すると共に、ファイルシステム自体も
機能の肥大化（いわゆるジャーナリング、暗号保護といったソフトウェア的肥大化）しており
結果としては、ソフトウェア動作に対するパフォーマンスの多大な影響を与えている事があります。
実際のところゲームのアセットデータを扱う場合、実装次第ではまだまだ
パフォーマンスに悪影響を与えることがあります。

　IceMilkTeaArchiveは、主にUnityのアセットバンドルを一つのアーカイブデータとして
管理と保持を行い、ゲームに対してあたかも普通の１アセットバンドルファイルかのように、機能を提供します。
アーカイブファイルとして持つことにより、ファイルシステムそのものの影響を極力抑えることが可能になります。

　機能としてはUnityのアセットバンドルに、最適な実装をする事がありますが
決してUnityの機能そのものを使った、実装を提供することはありません。
理由については、後述しています。

　また、IceMilkTeaArchiveは、通常のアーカイブファイルとして振る舞うため
アセットバンドル以外の、ファイルも格納が可能で通常のファイルのように振る舞います。
つまり、Unityとしての機能ではなく、単純なアーカイバとして振る舞う機能を提供します。
なので、Unityの機能を使った実装を行うことはありません。

　さらに、ファイルを読み込みながら別のデータを同時に書き込む事が可能で、オンデマンドな
データ更新をする機能も提供します。



2. アーカイブファイルフォーマット（ArchiveFile Format）
------------------------------------------------------------
　IceMilkTeaArchiveのアーカイブファイルの全体構造は以下に定義されています。
また、アーカイブファイルのデータはリトルエンディアンとして格納されていなければなりません。

+-------------------------+--------------+------------------+
|          (Entire) IceMilkTeaArchive File Format           |
+-------------------------+--------------+------------------+
|  MagicNumber (Fixed)    | 1 byte * 4   | 'I' 'M' 'T' 'A'  |
+-------------------------+--------------+------------------+
|  Archive Info           | 4 byte       |                  |
+-------------------------+--------------+                  |
|  EntryInfoList Offset   | 8 byte       |                  |
+-------------------------+--------------+  Archive Header  |
|  EntryInfoCount         | 4 byte       |                  |
+-------------------------+--------------+                  |
|  Reserved               | 4 byte       |                  |
+-------------------------+--------------+------------------+
|  Sequential Entry Data  | n byte * m   |  Data Container  |
+-------------------------+--------------+------------------+
|  EntryInfo List         | ? byte * m   |  Meta Container  |
+-------------------------+--------------+------------------+

各要素の説明は以下の通りになります。

* MagicNumber (Fixed)
　このファイルが、IceMilkTeaArchiveである事を示すファイル識別子です。
ファイルオープン時に、最初に読み込まれ、このマジックナンバーが一致しない場合
後続のデータが正しく格納されていても、ファイルとして正しくない物として扱われます。

データ型は、符号なし8bit整数の配列を使用します。


* Archive Info
　IceMilkTeaArchiveの基本情報を格納した領域になります。

データの型は、符号なし32bit整数を使用します。

また、32bitデータの内、各ビットの割当は次のようになっているべきです。
+------------+-----------+
|   31 - 8   |   7 - 0   |
+------------+-----------+
|  Reserved  |  Version  |
+------------+-----------+

- Version
 - この領域には、IceMilkTeaArchive仕様に対するバージョンが書き込まれるべきです。
   実際の、文字列バージョンの値とは一致しておらず、新しい使用バージョンが確定した時に
   値が決定されます。

- Reserved
 - この領域は、予約されています。ゼロで初期化されていなければなりません。


* EntryInfoList Offset
　アーカイブに格納された実際のコンテンツデータを "エントリ" と表現し
そのエントリ自体の情報（いわゆるヘッダ情報）のリストが格納されている
ファイルの先頭から始まるオフセットを格納しなければなりません。

データ型は、符号付き64bit整数を使用します。


* EntryInfoCount
　アーカイブに格納された "エントリ情報" の数を格納します。
ただし "エントリの実体" がアーカイブに格納されている保証はしていません

　例えば、"EntryInfoCount"に'10'が格納されていても
後述する、"Sequential Entry Data"の領域に、'10'のエントリが
入っている保証はされていません、このデータを意味するのは、"EntryInfo List"の
領域に入っている "エントリ情報の数" であるべきです。

　実体が入っているかどうかを確認するには、"エントリ情報"に含まれる"Contain"
情報を参照するべきです。

データ型は、符号付き32bit整数を使用します。


* Reserved
　現在の仕様では、予約領域として定義されています。
全てが、ゼロで初期化されていなければなりません。


* Sequential Entry Data
　アーカイブに格納された、実際のコンテンツのデータ、つまり "エントリの実体" が格納されます。
個々のエントリは連続した状態で、格納されなければなりませんが、エントリの実体の順番自体は
エントリ情報の順番と一致しなくてもよいです。

　エントリの実体の順番は、実装側が最適と思われる配置をすることも許されます。
また、"エントリの情報"が存在していたとしても、エントリの実体が存在しなくてもよいです。
エントリの実体が存在するかの保証は、"エントリの情報"がするべきです。

データ型は、符号なし8bit整数の配列がエントリの実体数分となります。
n : エントリの実体のサイズ（byte[n]）
m : エントリの実体の数（byte[m][n]）


* EntryInfo List
　アーカイブに格納された、"エントリの情報"のリストが格納されます。
"エントリの実体"を参照するには、このリストに含まれる"エントリの情報"を
使って参照することが可能になります。

　また、後述しますが、"エントリの情報"には、"エントリのID"が定義されており
このIDは、符号なし64bit整数として表現されます。
そして、このIDに基づいて、"エントリの情報"のリストは"昇順"で
ソートされた状態で、格納されていなければなりません。

データ型は、後述する「3. エントリ情報フォーマット（EntryInfo Format）」を参照してください。


3. エントリ情報フォーマット（EntryInfo Format）
------------------------------------------------------------
　エントリ情報フォーマットは、前述した "エントリの情報" そのもののフォーマットを定義しています。

**********************************************************************/
#endregion

namespace IceMilkTea.Module
{
}